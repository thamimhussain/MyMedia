{"ast":null,"code":"var _jsxFileName = \"/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaList() {\n  _s();\n  const [media, setMedia] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/media').then(response => response.json()).then(data => setMedia(data)).catch(error => console.error('Error fetching media:', error));\n  }, []);\n  const handleDelete = id => {\n    fetch(`http://localhost:5000/api/media/${id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      setMedia(media.filter(item => item.id !== id));\n    }).catch(error => console.error('Error deleting media:', error));\n  };\n  const handleEdit = (id, updatedMedia) => {\n    fetch(`http://localhost:5000/api/media/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedMedia)\n    }).then(response => response.json()).then(() => {\n      setMedia(media.map(item => item.id === id ? updatedMedia : item));\n    }).catch(error => console.error('Error updating media:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Media List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: media.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \" (\", item.type, \") - \", item.status, \" - \", item.episodes_watched, \" episodes watched - Rating: \", item.rating, \" - Review: \", item.review, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(item.id, {\n            ...item,\n            status: 'updated status'\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(MediaList, \"NUMwn+LjjhhnKlhXffVSYlILSQE=\");\n_c = MediaList;\nexport default MediaList;\nvar _c;\n$RefreshReg$(_c, \"MediaList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MediaList","_s","media","setMedia","fetch","then","response","json","data","catch","error","console","handleDelete","id","method","filter","item","handleEdit","updatedMedia","headers","body","JSON","stringify","map","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","status","episodes_watched","rating","review","onClick","_c","$RefreshReg$"],"sources":["/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MediaList() {\n    const [media, setMedia] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:5000/api/media')\n            .then(response => response.json())\n            .then(data => setMedia(data))\n            .catch(error => console.error('Error fetching media:', error));\n    }, []);\n\n    const handleDelete = (id) => {\n        fetch(`http://localhost:5000/api/media/${id}`, { method: 'DELETE' })\n            .then(response => response.json())\n            .then(() => {\n                setMedia(media.filter(item => item.id !== id));\n            })\n            .catch(error => console.error('Error deleting media:', error));\n    };\n\n    const handleEdit = (id, updatedMedia) => {\n        fetch(`http://localhost:5000/api/media/${id}`, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(updatedMedia),\n        })\n            .then(response => response.json())\n            .then(() => {\n                setMedia(media.map(item => (item.id === id ? updatedMedia : item)));\n            })\n            .catch(error => console.error('Error updating media:', error));\n    };\n\n    return (\n        <div>\n            <h2>Media List</h2>\n            <ul>\n                {media.map(item => (\n                    <li key={item.id}>\n                        <strong>{item.name}</strong> ({item.type}) - {item.status} - {item.episodes_watched} episodes watched - Rating: {item.rating} - Review: {item.review}\n                        <button onClick={() => handleEdit(item.id, { ...item, status: 'updated status' })}>Edit</button>\n                        <button onClick={() => handleDelete(item.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default MediaList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}