{"ast":null,"code":"var _jsxFileName = \"/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaDetail.js\",\n  _s = $RefreshSig$();\n// components/MediaDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport MediaForm from './MediaForm'; // Import the MediaForm component\nimport '../static/MediaDetailStyle.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaDetail({\n  setRefresh\n}) {\n  _s();\n  const {\n    source,\n    id\n  } = useParams();\n  const location = useLocation();\n  const [mediaType, setMediaType] = useState('');\n  const [mediaInfo, setMediaInfo] = useState(null);\n  const [showForm, setShowForm] = useState(false); // State to control form visibility\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const type = params.get('media_type');\n    setMediaType(type);\n    let url = `http://127.0.0.1:8000/api/media_info?source=${source}&id=${id}`;\n    if (source === 'tmdb') {\n      url += `&media_type=${type}`;\n    }\n    fetch(url).then(response => response.json()).then(data => {\n      setMediaInfo(data);\n    }).catch(error => console.error('Error fetching media info:', error));\n  }, [source, id, location.search]);\n  const handleAddToListClick = () => {\n    setShowForm(true); // Show the form when button is clicked\n  };\n  const handleSave = newMedia => {\n    fetch('http://127.0.0.1:8000/api/media', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newMedia)\n    }).then(response => response.json()).then(() => {\n      alert('Media added to your list!');\n      if (setRefresh) setRefresh(prev => !prev); // Refresh the media list\n      setShowForm(false); // Hide the form after saving\n    }).catch(error => console.error('Error adding media:', error));\n  };\n  if (!mediaInfo) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading media details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"media-detail-title\",\n      children: mediaInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mediaInfo.image_url,\n      alt: mediaInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this), \" \", mediaInfo.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Episodes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), \" \", mediaInfo.episodes || 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Score:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this), \" \", mediaInfo.score || 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this), \" \", mediaInfo.status || 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Genres:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this), \" \", mediaInfo.genres ? mediaInfo.genres.join(', ') : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Synopsis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mediaInfo.synopsis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), !showForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToListClick,\n      className: \"add-to-list-button\",\n      children: \"Add to My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MediaForm, {\n      mediaItem: null,\n      onSave: handleSave,\n      prefillData: {\n        name: mediaInfo.title,\n        type: mediaType\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(MediaDetail, \"SwlTqSVbsbIvCZPVGU8ZV+AFZPU=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = MediaDetail;\nexport default MediaDetail;\nvar _c;\n$RefreshReg$(_c, \"MediaDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","MediaForm","jsxDEV","_jsxDEV","MediaDetail","setRefresh","_s","source","id","location","mediaType","setMediaType","mediaInfo","setMediaInfo","showForm","setShowForm","params","URLSearchParams","search","type","get","url","fetch","then","response","json","data","catch","error","console","handleAddToListClick","handleSave","newMedia","method","headers","body","JSON","stringify","alert","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","image_url","alt","episodes","score","status","genres","join","synopsis","onClick","mediaItem","onSave","prefillData","name","_c","$RefreshReg$"],"sources":["/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaDetail.js"],"sourcesContent":["// components/MediaDetail.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport MediaForm from './MediaForm'; // Import the MediaForm component\nimport '../static/MediaDetailStyle.css'; // Import the CSS file for styling\n\nfunction MediaDetail({ setRefresh }) {\n    const { source, id } = useParams();\n    const location = useLocation();\n    const [mediaType, setMediaType] = useState('');\n    const [mediaInfo, setMediaInfo] = useState(null);\n    const [showForm, setShowForm] = useState(false); // State to control form visibility\n\n    useEffect(() => {\n        const params = new URLSearchParams(location.search);\n        const type = params.get('media_type');\n        setMediaType(type);\n\n        let url = `http://127.0.0.1:8000/api/media_info?source=${source}&id=${id}`;\n        if (source === 'tmdb') {\n            url += `&media_type=${type}`;\n        }\n\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setMediaInfo(data);\n            })\n            .catch(error => console.error('Error fetching media info:', error));\n    }, [source, id, location.search]);\n\n    const handleAddToListClick = () => {\n        setShowForm(true); // Show the form when button is clicked\n    };\n\n    const handleSave = (newMedia) => {\n        fetch('http://127.0.0.1:8000/api/media', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newMedia),\n        })\n            .then(response => response.json())\n            .then(() => {\n                alert('Media added to your list!');\n                if (setRefresh) setRefresh(prev => !prev); // Refresh the media list\n                setShowForm(false); // Hide the form after saving\n            })\n            .catch(error => console.error('Error adding media:', error));\n    };\n\n    if (!mediaInfo) {\n        return <p>Loading media details...</p>;\n    }\n\n    return (\n        <div className=\"media-detail-container\">\n            <h2 className=\"media-detail-title\">{mediaInfo.title}</h2>\n            <img src={mediaInfo.image_url} alt={mediaInfo.title} />\n            <p><strong>Type:</strong> {mediaInfo.type}</p>\n            <p><strong>Episodes:</strong> {mediaInfo.episodes || 'N/A'}</p>\n            <p><strong>Score:</strong> {mediaInfo.score || 'N/A'}</p>\n            <p><strong>Status:</strong> {mediaInfo.status || 'N/A'}</p>\n            <p><strong>Genres:</strong> {mediaInfo.genres ? mediaInfo.genres.join(', ') : 'N/A'}</p>\n            <p><strong>Synopsis:</strong></p>\n            <p>{mediaInfo.synopsis}</p>\n            {!showForm ? (\n                <button onClick={handleAddToListClick} className=\"add-to-list-button\">\n                    Add to My List\n                </button>\n            ) : (\n                <MediaForm\n                    mediaItem={null}\n                    onSave={handleSave}\n                    prefillData={{\n                        name: mediaInfo.title,\n                        type: mediaType,\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default MediaDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}