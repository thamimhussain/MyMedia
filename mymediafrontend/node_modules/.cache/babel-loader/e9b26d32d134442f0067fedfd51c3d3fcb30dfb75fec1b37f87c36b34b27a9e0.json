{"ast":null,"code":"var _jsxFileName = \"/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js\",\n  _s = $RefreshSig$();\n// components/MediaList.js\nimport React, { useState, useEffect } from 'react';\nimport MediaForm from './MediaForm';\nimport '../static/MediaListStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaList = ({\n  refresh,\n  setRefresh\n}) => {\n  _s();\n  const [media, setMedia] = useState([]);\n  const [editingItem, setEditingItem] = useState(null);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/media').then(response => response.json()).then(data => {\n      const transformedData = data.map(item => ({\n        id: item[0],\n        name: item[1],\n        type: item[2],\n        status: item[3],\n        episodes_watched: item[4],\n        rating: item[5],\n        review: item[6]\n      }));\n      setMedia(transformedData);\n    }).catch(error => console.error('Error fetching media:', error));\n  }, [refresh]);\n\n  // Handle deleting a media item\n  const handleDelete = id => {\n    fetch(`http://127.0.0.1:8000/api/media/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setMedia(media.filter(item => item.id !== id));\n    }).catch(error => console.error('Error deleting media:', error));\n  };\n\n  // Handle starting edit mode\n  const handleEdit = item => {\n    setEditingItem(item);\n  };\n\n  // Handle updating a media item\n  const handleUpdate = updatedItem => {\n    fetch(`http://127.0.0.1:8000/api/media/${updatedItem.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedItem)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setMedia(media.map(item => item.id === updatedItem.id ? updatedItem : item));\n      setEditingItem(null);\n    }).catch(error => console.error('Error updating media:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"media-list-title\",\n      children: \"All Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), editingItem ? /*#__PURE__*/_jsxDEV(MediaForm, {\n      mediaItem: editingItem,\n      onSave: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"media-list\",\n      children: media.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"media-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.name, \" (\", item.type, \") - \", item.status, \" - \", item.episodes_watched, \" episodes watched - Rating: \", item.rating, \"/10 - Review: \", item.review]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => handleEdit(item),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaList, \"QPrhYbqHtoqAabpe+xdh9l3n9qM=\");\n_c = MediaList;\nexport default MediaList;\nvar _c;\n$RefreshReg$(_c, \"MediaList\");","map":{"version":3,"names":["React","useState","useEffect","MediaForm","jsxDEV","_jsxDEV","MediaList","refresh","setRefresh","_s","media","setMedia","editingItem","setEditingItem","fetch","then","response","json","data","transformedData","map","item","id","name","type","status","episodes_watched","rating","review","catch","error","console","handleDelete","method","headers","ok","Error","filter","handleEdit","handleUpdate","updatedItem","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mediaItem","onSave","onClick","_c","$RefreshReg$"],"sources":["/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js"],"sourcesContent":["// components/MediaList.js\nimport React, { useState, useEffect } from 'react';\nimport MediaForm from './MediaForm';\nimport '../static/MediaListStyle.css';\n\nconst MediaList = ({ refresh, setRefresh }) => {\n    const [media, setMedia] = useState([]);\n    const [editingItem, setEditingItem] = useState(null);\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/media')\n            .then(response => response.json())\n            .then(data => {\n                const transformedData = data.map(item => ({\n                    id: item[0],\n                    name: item[1],\n                    type: item[2],\n                    status: item[3],\n                    episodes_watched: item[4],\n                    rating: item[5],\n                    review: item[6]\n                }));\n                setMedia(transformedData);\n            })\n            .catch(error => console.error('Error fetching media:', error));\n    }, [refresh]);\n\n    // Handle deleting a media item\n    const handleDelete = (id) => {\n        fetch(`http://127.0.0.1:8000/api/media/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                setMedia(media.filter(item => item.id !== id));\n            })\n            .catch(error => console.error('Error deleting media:', error));\n    };\n\n    // Handle starting edit mode\n    const handleEdit = (item) => {\n        setEditingItem(item);\n    };\n\n    // Handle updating a media item\n    const handleUpdate = (updatedItem) => {\n        fetch(`http://127.0.0.1:8000/api/media/${updatedItem.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(updatedItem),\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                setMedia(media.map(item =>\n                    item.id === updatedItem.id ? updatedItem : item\n                ));\n                setEditingItem(null);\n            })\n            .catch(error => console.error('Error updating media:', error));\n    };\n\n    return (\n        <div className=\"media-list-container\">\n            <h2 className=\"media-list-title\">All Media</h2>\n            {editingItem ? (\n                <MediaForm mediaItem={editingItem} onSave={handleUpdate} />\n            ) : (\n                <ul className=\"media-list\">\n                    {media.map(item => (\n                        <li key={item.id} className=\"media-item\">\n                            <span>{item.name} ({item.type}) - {item.status} - {item.episodes_watched} episodes watched - Rating: {item.rating}/10 - Review: {item.review}</span>\n                            <button className=\"delete-button\" onClick={() => handleDelete(item.id)}>Delete</button>\n                            <button className=\"edit-button\" onClick={() => handleEdit(item)}>Edit</button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default MediaList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAMC,eAAe,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,KAAK;QACtCC,EAAE,EAAED,IAAI,CAAC,CAAC,CAAC;QACXE,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;QACbG,IAAI,EAAEH,IAAI,CAAC,CAAC,CAAC;QACbI,MAAM,EAAEJ,IAAI,CAAC,CAAC,CAAC;QACfK,gBAAgB,EAAEL,IAAI,CAAC,CAAC,CAAC;QACzBM,MAAM,EAAEN,IAAI,CAAC,CAAC,CAAC;QACfO,MAAM,EAAEP,IAAI,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC;MACHV,QAAQ,CAACQ,eAAe,CAAC;IAC7B,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACvB,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMyB,YAAY,GAAIV,EAAE,IAAK;IACzBR,KAAK,CAAC,mCAAmCQ,EAAE,EAAE,EAAE;MAC3CW,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CACGnB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACmB,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACAzB,QAAQ,CAACD,KAAK,CAAC2B,MAAM,CAAChB,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;;EAED;EACA,MAAMQ,UAAU,GAAIjB,IAAI,IAAK;IACzBR,cAAc,CAACQ,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMkB,YAAY,GAAIC,WAAW,IAAK;IAClC1B,KAAK,CAAC,mCAAmC0B,WAAW,CAAClB,EAAE,EAAE,EAAE;MACvDW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,WAAW;IACpC,CAAC,CAAC,CACGzB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACmB,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACAzB,QAAQ,CAACD,KAAK,CAACU,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACC,EAAE,KAAKkB,WAAW,CAAClB,EAAE,GAAGkB,WAAW,GAAGnB,IAC/C,CAAC,CAAC;MACFR,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC;EAED,oBACIzB,OAAA;IAAKuC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCxC,OAAA;MAAIuC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9CrC,WAAW,gBACRP,OAAA,CAACF,SAAS;MAAC+C,SAAS,EAAEtC,WAAY;MAACuC,MAAM,EAAEZ;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3D5C,OAAA;MAAIuC,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrBnC,KAAK,CAACU,GAAG,CAACC,IAAI,iBACXhB,OAAA;QAAkBuC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACpCxC,OAAA;UAAAwC,QAAA,GAAOxB,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,IAAI,EAAC,MAAI,EAACH,IAAI,CAACI,MAAM,EAAC,KAAG,EAACJ,IAAI,CAACK,gBAAgB,EAAC,8BAA4B,EAACL,IAAI,CAACM,MAAM,EAAC,gBAAc,EAACN,IAAI,CAACO,MAAM;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpJ5C,OAAA;UAAQuC,SAAS,EAAC,eAAe;UAACQ,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACX,IAAI,CAACC,EAAE,CAAE;UAAAuB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvF5C,OAAA;UAAQuC,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACjB,IAAI,CAAE;UAAAwB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHzE5B,IAAI,CAACC,EAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACxC,EAAA,CAnFIH,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAqFf,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}