{"ast":null,"code":"var _jsxFileName = \"/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MediaForm from './MediaForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaList() {\n  _s();\n  const [media, setMedia] = useState([]);\n  const [editingItem, setEditingItem] = useState(null);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/media').then(response => response.json()).then(data => {\n      console.log('Fetched media data:', data); // Check data structure\n      setMedia(data);\n    }).catch(error => console.error('Error fetching media:', error));\n  }, []);\n  const handleDelete = id => {\n    console.log('Deleting media with ID:', id); // Log the ID\n    fetch(`http://127.0.0.1:5000/api/media/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(() => {\n      console.log('Media deleted successfully');\n      setMedia(media.filter(item => item.id !== id));\n    }).catch(error => console.error('Error deleting media:', error));\n  };\n  const handleEdit = item => {\n    setEditingItem(item);\n  };\n  const handleUpdate = updatedItem => {\n    fetch(`http://127.0.0.1:5000/api/media/${updatedItem.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedItem)\n    }).then(response => response.json()).then(() => {\n      setMedia(media.map(item => item.id === updatedItem.id ? updatedItem : item));\n      setEditingItem(null); // Reset the editing state\n    }).catch(error => console.error('Error updating media:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), editingItem ? /*#__PURE__*/_jsxDEV(MediaForm, {\n      mediaItem: editingItem,\n      onSave: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: media.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.name, \" (\", item.type, \") - \", item.status, \" - \", item.episodes_watched, \" episodes watched - Rating: \", item.rating, \" - \", item.review]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(item),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(MediaList, \"QPrhYbqHtoqAabpe+xdh9l3n9qM=\");\n_c = MediaList;\nexport default MediaList;\nvar _c;\n$RefreshReg$(_c, \"MediaList\");","map":{"version":3,"names":["React","useEffect","useState","MediaForm","jsxDEV","_jsxDEV","MediaList","_s","media","setMedia","editingItem","setEditingItem","fetch","then","response","json","data","console","log","catch","error","handleDelete","id","method","ok","Error","filter","item","handleEdit","handleUpdate","updatedItem","headers","body","JSON","stringify","map","children","fileName","_jsxFileName","lineNumber","columnNumber","mediaItem","onSave","name","type","status","episodes_watched","rating","review","onClick","_c","$RefreshReg$"],"sources":["/Users/thamim/personal/MyMedia/frontend/mymediafrontend/src/components/MediaList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MediaForm from './MediaForm';\n\nfunction MediaList() {\n    const [media, setMedia] = useState([]);\n    const [editingItem, setEditingItem] = useState(null);\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:5000/api/media')\n            .then(response => response.json())\n            .then(data => {\n                console.log('Fetched media data:', data); // Check data structure\n                setMedia(data);\n            })\n            .catch(error => console.error('Error fetching media:', error));\n    }, []);\n\n\n    const handleDelete = (id) => {\n        console.log('Deleting media with ID:', id); // Log the ID\n        fetch(`http://127.0.0.1:5000/api/media/${id}`, {\n            method: 'DELETE',\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(() => {\n                console.log('Media deleted successfully');\n                setMedia(media.filter(item => item.id !== id));\n            })\n            .catch(error => console.error('Error deleting media:', error));\n    };\n\n\n\n    const handleEdit = (item) => {\n        setEditingItem(item);\n    };\n\n    const handleUpdate = (updatedItem) => {\n        fetch(`http://127.0.0.1:5000/api/media/${updatedItem.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(updatedItem),\n        })\n            .then(response => response.json())\n            .then(() => {\n                setMedia(media.map(item => item.id === updatedItem.id ? updatedItem : item));\n                setEditingItem(null); // Reset the editing state\n            })\n            .catch(error => console.error('Error updating media:', error));\n    };\n\n    return (\n        <div>\n            <h2>All Media</h2>\n            {editingItem ? (\n                <MediaForm mediaItem={editingItem} onSave={handleUpdate} />\n            ) : (\n                <ul>\n                    {media.map(item => (\n                        <li key={item.id}>\n                            <span>{item.name} ({item.type}) - {item.status} - {item.episodes_watched} episodes watched - Rating: {item.rating} - {item.review}</span>\n                            <button onClick={() => handleDelete(item.id)}>Delete</button>\n                            <button onClick={() => handleEdit(item)}>Edit</button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default MediaList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}